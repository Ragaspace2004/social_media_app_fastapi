{"timestamp": "2025-08-10T16:54:13.426596Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T16:54:13.427223Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:54:13.431534Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T16:54:13.431705Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:54:13.432345Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T16:54:13.433227Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:54:13.436282Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:54:13.438654Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:13.438919Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00048s] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:13.465619Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:13.465780Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00027s] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:13.467035Z", "level": "WARNING", "logger": "passlib.handlers.bcrypt", "message": "(trapped) error reading bcrypt version"}
{"timestamp": "2025-08-10T16:54:13.725276Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO user (email, username, name, hashed_password, created_at, dob, gender, profile_pic, bio, location, followers_count, following_count) VALUES (%(email)s, %(username)s, %(name)s, %(hashed_password)s, now(), %(dob)s, %(gender)s, %(profile_pic)s, %(bio)s, %(location)s, %(followers_count)s, %(following_count)s)"}
{"timestamp": "2025-08-10T16:54:13.725441Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00029s] {'email': 'test@example.com', 'username': 'testuser', 'name': 'Test User', 'hashed_password': '$2b$12$pvgExFKwPm09dzxCHvQpCOnAWbhYEhYGsBg9hRKDlNZ6l9Oz2N8te', 'dob': None, 'gender': None, 'profile_pic': None, 'bio': None, 'location': None, 'followers_count': 0, 'following_count': 0}"}
{"timestamp": "2025-08-10T16:54:13.746469Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T16:54:13.755485Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:54:13.756340Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id, user.email, user.username, user.name, user.hashed_password, user.created_at, user.dob, user.gender, user.profile_pic, user.bio, user.location, user.followers_count, user.following_count \nFROM user \nWHERE user.id = %(pk_1)s"}
{"timestamp": "2025-08-10T16:54:13.756558Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00025s] {'pk_1': 21}"}
{"timestamp": "2025-08-10T16:54:13.774343Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH SUCCESS - User:SIGNUP:testuser, IP:testclient", "event_type": "auth_success", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:54:13.774902Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:54:13.777556Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 201 Created\""}
{"timestamp": "2025-08-10T16:54:13.781322Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/post/ \"HTTP/1.1 404 Not Found\""}
{"timestamp": "2025-08-10T16:54:13.888642Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/post/ \"HTTP/1.1 404 Not Found\""}
{"timestamp": "2025-08-10T16:54:13.896927Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:54:13.897256Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:13.897378Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.459s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:13.899272Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:13.899401Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.4339s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:13.900129Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:54:13.900249Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:testuser - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:54:13.900771Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:54:13.902589Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:54:13.911975Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:54:13.912513Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:13.912758Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.4743s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:13.914077Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:13.914205Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.4487s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:13.914910Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:54:13.915031Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:testuser - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:54:13.915333Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:54:13.917005Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:54:13.927772Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:54:13.928102Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:13.928225Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.4898s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:13.929339Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:13.929471Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.464s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:13.930199Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:54:13.930315Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:testuser - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:54:13.930623Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:54:13.932345Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:54:13.940695Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:54:13.941031Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:13.941154Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.5027s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:13.942369Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:13.942497Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.477s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:13.943195Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:54:13.943302Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:testuser - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:54:13.943745Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:54:13.945539Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:54:13.954369Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:54:13.963494Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:54:13.972277Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:54:15.368921Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T16:54:15.369259Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:54:15.370472Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T16:54:15.370617Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:54:15.371192Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T16:54:15.371323Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:54:15.372230Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:54:15.375016Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:15.375285Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00086s] {'username_1': 'user1', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:15.379252Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:15.379418Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00028s] {'email_1': 'user1@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:15.380557Z", "level": "WARNING", "logger": "passlib.handlers.bcrypt", "message": "(trapped) error reading bcrypt version"}
{"timestamp": "2025-08-10T16:54:15.637837Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO user (email, username, name, hashed_password, created_at, dob, gender, profile_pic, bio, location, followers_count, following_count) VALUES (%(email)s, %(username)s, %(name)s, %(hashed_password)s, now(), %(dob)s, %(gender)s, %(profile_pic)s, %(bio)s, %(location)s, %(followers_count)s, %(following_count)s)"}
{"timestamp": "2025-08-10T16:54:15.638049Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00037s] {'email': 'user1@example.com', 'username': 'user1', 'name': 'User One', 'hashed_password': '$2b$12$r8XA1kHrh6d4O3/odiDV5ehBHUrEb8VQ9Uc2YQzzYYcL9cXwgccKa', 'dob': None, 'gender': None, 'profile_pic': None, 'bio': None, 'location': None, 'followers_count': 0, 'following_count': 0}"}
{"timestamp": "2025-08-10T16:54:15.645066Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T16:54:15.649205Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:54:15.650404Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id, user.email, user.username, user.name, user.hashed_password, user.created_at, user.dob, user.gender, user.profile_pic, user.bio, user.location, user.followers_count, user.following_count \nFROM user \nWHERE user.id = %(pk_1)s"}
{"timestamp": "2025-08-10T16:54:15.650554Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00026s] {'pk_1': 22}"}
{"timestamp": "2025-08-10T16:54:15.656864Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH SUCCESS - User:SIGNUP:user1, IP:testclient", "event_type": "auth_success", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:54:15.657359Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:54:15.659622Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 201 Created\""}
{"timestamp": "2025-08-10T16:54:15.664279Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:54:15.664757Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:15.665008Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.2906s ago] {'username_1': 'user2', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:15.666463Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:15.666669Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.2875s ago] {'email_1': 'user2@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:15.902851Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO user (email, username, name, hashed_password, created_at, dob, gender, profile_pic, bio, location, followers_count, following_count) VALUES (%(email)s, %(username)s, %(name)s, %(hashed_password)s, now(), %(dob)s, %(gender)s, %(profile_pic)s, %(bio)s, %(location)s, %(followers_count)s, %(following_count)s)"}
{"timestamp": "2025-08-10T16:54:15.903035Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.2654s ago] {'email': 'user2@example.com', 'username': 'user2', 'name': 'User Two', 'hashed_password': '$2b$12$2/cq/imVDL3XdtF9oNdDU.j9o8fmYQkxum3.CspVaBYVEa13ZpAeW', 'dob': None, 'gender': None, 'profile_pic': None, 'bio': None, 'location': None, 'followers_count': 0, 'following_count': 0}"}
{"timestamp": "2025-08-10T16:54:15.904420Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T16:54:15.910619Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:54:15.911068Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id, user.email, user.username, user.name, user.hashed_password, user.created_at, user.dob, user.gender, user.profile_pic, user.bio, user.location, user.followers_count, user.following_count \nFROM user \nWHERE user.id = %(pk_1)s"}
{"timestamp": "2025-08-10T16:54:15.911302Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.2609s ago] {'pk_1': 23}"}
{"timestamp": "2025-08-10T16:54:15.912390Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH SUCCESS - User:SIGNUP:user2, IP:testclient", "event_type": "auth_success", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:54:15.912951Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:54:15.915195Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 201 Created\""}
{"timestamp": "2025-08-10T16:54:15.920167Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:54:15.921509Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.id = %(id_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:15.921755Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00036s] {'id_1': 22, 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:15.923215Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:15.923360Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.549s ago] {'username_1': 'user1', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:15.924436Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:15.924570Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.5502s ago] {'username_1': 'user2', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:15.926396Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT follow.follower_id AS follow_follower_id, follow.following_id AS follow_following_id \nFROM follow \nWHERE follow.follower_id = %(follower_id_1)s AND follow.following_id = %(following_id_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:15.926632Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00029s] {'follower_id_1': 22, 'following_id_1': 23, 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:15.935254Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO activity (username, timestamp, liked_post_id, username_liked, liked_post_image, followed_username, followed_user_pic) VALUES (%(username)s, now(), %(liked_post_id)s, %(username_liked)s, %(liked_post_image)s, %(followed_username)s, %(followed_user_pic)s)"}
{"timestamp": "2025-08-10T16:54:15.935520Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00041s] {'username': 'user1', 'liked_post_id': None, 'username_liked': None, 'liked_post_image': None, 'followed_username': 'user2', 'followed_user_pic': None}"}
{"timestamp": "2025-08-10T16:54:15.940785Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "UPDATE user SET following_count=%(following_count)s WHERE user.id = %(user_id)s"}
{"timestamp": "2025-08-10T16:54:15.940939Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00027s] {'following_count': 1, 'user_id': 22}"}
{"timestamp": "2025-08-10T16:54:15.945062Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "UPDATE user SET followers_count=%(followers_count)s WHERE user.id = %(user_id)s"}
{"timestamp": "2025-08-10T16:54:15.945270Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00033s] {'followers_count': 1, 'user_id': 23}"}
{"timestamp": "2025-08-10T16:54:15.946729Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "INSERT INTO follow (follower_id, following_id) VALUES (%(follower_id)s, %(following_id)s)"}
{"timestamp": "2025-08-10T16:54:15.946913Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00031s] {'follower_id': 22, 'following_id': 23}"}
{"timestamp": "2025-08-10T16:54:15.949273Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T16:54:15.954037Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/profile/follow/user2 \"HTTP/1.1 204 No Content\""}
{"timestamp": "2025-08-10T16:54:16.051456Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:54:16.051797Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:16.051924Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.6775s ago] {'username_1': 'user1', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:16.053195Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:16.053336Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.6742s ago] {'email_1': 'user1@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:16.054243Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:user1, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:54:16.054379Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:user1 - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:54:16.054789Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:54:16.056959Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:54:16.060870Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:54:16.061142Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:16.061259Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.6869s ago] {'username_1': 'user2', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:16.065727Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:16.065874Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.6867s ago] {'email_1': 'user2@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:16.066745Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:user2, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:54:16.066869Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:user2 - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:54:16.067235Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:54:16.069231Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:54:16.078891Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:54:16.083275Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:54:16.092052Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:54:16.096711Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:54:16.105950Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:54:16.110651Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:54:16.119608Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:54:16.124033Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:54:16.133848Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:54:16.138460Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:54:17.533814Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T16:54:17.534140Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:54:17.534997Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T16:54:17.535140Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:54:17.535606Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T16:54:17.536007Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:54:17.536847Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:54:17.539566Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:17.540428Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00137s] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:17.544646Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:17.544814Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00029s] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:17.546169Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:54:17.546314Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:testuser - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:54:17.546725Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:54:17.549536Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:54:17.644934Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:54:17.645325Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:17.645456Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1064s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:17.646694Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:17.646884Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1024s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:17.647688Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:54:17.647814Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:testuser - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:54:17.648196Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:54:17.650309Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:54:17.657551Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/v1/activity/testuser \"HTTP/1.1 404 Not Found\""}
{"timestamp": "2025-08-10T16:54:17.664968Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:54:17.665288Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:17.665412Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1264s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:17.666692Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:54:17.666830Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1223s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:54:17.667689Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:54:17.667814Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:testuser - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:54:17.668181Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:54:17.670099Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:57:04.433141Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T16:57:04.433718Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:57:04.435219Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T16:57:04.435406Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:57:04.436262Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T16:57:04.436396Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:57:04.437229Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:57:04.439620Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:04.439904Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00049s] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:04.446044Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:04.446203Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00026s] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:04.447186Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:57:04.447337Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:testuser - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:57:04.447761Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:57:04.450859Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:57:04.566085Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/post/ \"HTTP/1.1 404 Not Found\""}
{"timestamp": "2025-08-10T16:57:04.576967Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:57:04.577292Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:04.577417Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.138s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:04.578675Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:04.578858Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1329s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:04.579682Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:57:04.579803Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:testuser - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:57:04.580181Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:57:04.582261Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:57:04.591762Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:57:04.592381Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:04.592590Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1532s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:04.593876Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:04.594022Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1481s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:04.594829Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:57:04.594951Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:testuser - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:57:04.595319Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:57:04.597252Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:57:04.606368Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:57:04.606692Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:04.606817Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1674s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:04.608058Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:04.608496Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1625s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:04.609555Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:57:04.609759Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:testuser - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:57:04.610114Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:57:04.615673Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:57:04.625055Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:57:04.625462Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:04.625663Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1862s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:04.627046Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:04.627196Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1813s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:04.628117Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:57:04.628245Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:testuser - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:57:04.628613Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:57:04.630593Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:57:04.640571Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:57:04.651855Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:57:04.662482Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:57:06.072544Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T16:57:06.072834Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:57:06.073889Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T16:57:06.074033Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:57:06.074673Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T16:57:06.075042Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:57:06.076184Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:57:06.079096Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:06.079379Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00089s] {'username_1': 'user1', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:06.084919Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:06.085081Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00026s] {'email_1': 'user1@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:06.086095Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:user1, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:57:06.086287Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:user1 - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:57:06.086714Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:57:06.089938Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:57:06.094476Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:57:06.094738Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:06.094855Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.0164s ago] {'username_1': 'user2', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:06.096072Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:06.096203Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.0114s ago] {'email_1': 'user2@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:06.097290Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:user2, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:57:06.097429Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:user2 - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:57:06.097805Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:57:06.099950Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:57:06.211377Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:57:06.211687Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:06.211815Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1334s ago] {'username_1': 'user1', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:06.213029Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:06.213217Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1284s ago] {'email_1': 'user1@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:06.214044Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:user1, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:57:06.214176Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:user1 - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:57:06.214538Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:57:06.216356Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:57:06.219914Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:57:06.220171Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:06.220286Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1418s ago] {'username_1': 'user2', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:06.221522Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:06.221654Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1368s ago] {'email_1': 'user2@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:06.222487Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:user2, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:57:06.222611Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:user2 - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:57:06.222974Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:57:06.225260Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:57:06.234878Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:57:06.235207Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:06.235329Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1569s ago] {'username_1': 'user1', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:06.236605Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:06.236744Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1519s ago] {'email_1': 'user1@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:06.237593Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:user1, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:57:06.237716Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:user1 - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:57:06.238077Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:57:06.240074Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:57:06.245209Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:57:06.254700Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:57:06.259641Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:57:06.271051Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:57:06.275647Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:57:06.288627Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:57:06.296290Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:57:06.310066Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:57:06.315539Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T16:57:07.709915Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T16:57:07.710219Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:57:07.711261Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T16:57:07.711401Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:57:07.711958Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T16:57:07.712089Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T16:57:07.712866Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:57:07.715648Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:07.715925Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00088s] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:07.722909Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:07.723077Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00027s] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:07.724403Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:57:07.724552Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:testuser - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:57:07.725354Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:57:07.727949Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:57:07.970467Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:57:07.970801Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:07.970926Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.2559s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:07.972234Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:07.972389Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.2496s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:07.973178Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:57:07.973313Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:testuser - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:57:07.973695Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:57:07.976646Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T16:57:07.985743Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/v1/activity/testuser \"HTTP/1.1 404 Not Found\""}
{"timestamp": "2025-08-10T16:57:08.025965Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T16:57:08.026508Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:08.026701Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.3117s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:08.027965Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T16:57:08.028119Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.3053s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T16:57:08.028860Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T16:57:08.028993Z", "level": "ERROR", "logger": "SECURITY", "message": "ERROR - SIGNUP:testuser - 409: Username or Email already exists", "event_type": "error", "ip_address": "testclient", "endpoint": "/auth/register"}
{"timestamp": "2025-08-10T16:57:08.029357Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T16:57:08.031169Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 500 Internal Server Error\""}
{"timestamp": "2025-08-10T17:04:27.415895Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T17:04:27.416280Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:04:27.417335Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T17:04:27.417479Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:04:27.418052Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T17:04:27.418183Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:04:27.419018Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:04:27.419341Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:04:27.419923Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:04:27.473841Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:04:27.473978Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:04:27.475470Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:04:27.475618Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:04:27.477145Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:04:27.477292Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:04:27.478664Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:04:27.478792Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:04:27.480104Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:04:27.480234Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:04:27.482099Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:04:27.482230Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:04:27.483841Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:04:27.500803Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:04:27.504386Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:05:48.929422Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T17:05:48.930012Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:05:48.931754Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T17:05:48.932114Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:05:48.933076Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T17:05:48.933383Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:05:48.934783Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:05:48.936063Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:05:48.936637Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:05:48.945005Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:05:48.945498Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:05:48.947483Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:05:48.947856Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:05:48.950169Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:05:48.957464Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:05:48.960712Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:05:48.961105Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:05:48.963200Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:05:48.963707Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:05:48.967027Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:05:48.967463Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:05:48.970859Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:05:48.984208Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:05:48.990152Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:06:17.019644Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T17:06:17.020737Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:06:17.022216Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T17:06:17.022613Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:06:17.023458Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T17:06:17.023749Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:06:17.024709Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:06:17.025132Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:06:17.025405Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:06:17.034283Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:06:17.035723Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:06:17.038165Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:06:17.038579Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:06:17.040811Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:06:17.041286Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:06:17.042836Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:06:17.043156Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:06:17.045756Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:06:17.046562Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:06:17.048520Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:06:17.048908Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:06:17.050556Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:06:17.065222Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:06:17.069261Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:06:56.435953Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:07:46.647167Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/test/register \"HTTP/1.1 404 Not Found\""}
{"timestamp": "2025-08-10T17:08:10.321293Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/docs \"HTTP/1.1 200 OK\""}
{"timestamp": "2025-08-10T17:08:10.325200Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/test/register \"HTTP/1.1 404 Not Found\""}
{"timestamp": "2025-08-10T17:08:10.346256Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:24.422671Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T17:08:24.422972Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:24.424279Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T17:08:24.424435Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:24.424978Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T17:08:24.425122Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:24.425927Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:08:24.428351Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:08:24.428639Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00050s] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:08:24.439291Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:08:24.439454Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00027s] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:08:24.440584Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:08:24.441052Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:08:24.444822Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:08:25.032321Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/post/ \"HTTP/1.1 404 Not Found\""}
{"timestamp": "2025-08-10T17:08:25.608009Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:08:25.608385Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:08:25.608525Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 1.18s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:08:25.610004Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:08:25.610178Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 1.171s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:08:25.611184Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:08:25.611755Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:08:25.614034Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:08:26.194081Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:08:26.194416Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:08:26.194541Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 1.766s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:08:26.195893Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:08:26.196051Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 1.757s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:08:26.196955Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:08:26.197404Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:08:26.199545Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:08:26.820184Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:08:26.820909Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:08:26.821295Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 2.393s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:08:26.823406Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:08:26.823671Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 2.384s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:08:26.825118Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:08:26.825867Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:08:26.829389Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:08:27.439928Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:08:27.440731Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:08:27.441091Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 3.013s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:08:27.443904Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:08:27.444281Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 3.005s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:08:27.446051Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:08:27.446963Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:08:27.451578Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:08:28.021784Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:08:28.596233Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:08:29.191021Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:08:31.382278Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T17:08:31.382602Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:31.384202Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T17:08:31.384377Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:31.385044Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T17:08:31.385615Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:31.386482Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:08:31.386775Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:08:31.386974Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:31.398321Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:08:31.398470Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:31.400315Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:08:31.400549Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:31.402371Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:08:31.402508Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:31.403810Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:08:31.403934Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:31.405174Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:08:31.405318Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:31.406782Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:08:31.406916Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:31.408454Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:08:31.421097Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:31.423951Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:32.087075Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:08:32.087623Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:08:32.087911Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:32.091026Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:08:32.091312Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:32.094028Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:08:32.094385Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:32.098202Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:08:32.098572Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:32.102467Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:08:32.103233Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:32.106898Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:08:32.107345Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:32.110767Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:08:32.111037Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:32.114005Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:08:32.122449Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:32.126472Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:32.608694Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:08:32.609321Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:08:32.609653Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:32.613402Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:08:32.613764Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:32.619010Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:08:32.619774Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:32.624547Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:08:32.624924Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:32.628497Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:08:32.628866Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:32.632008Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:08:32.632368Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:32.637900Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:08:32.638231Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:32.641355Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:08:32.648841Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:32.654337Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:33.207628Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:08:33.207942Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:08:33.208100Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:33.210328Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:08:33.210472Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:33.212605Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:08:33.212751Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:33.215410Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:08:33.215562Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:33.218178Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:08:33.218364Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:33.220057Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:08:33.220206Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:33.222565Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:08:33.222710Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:33.225025Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:08:33.229534Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:33.232098Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:33.781544Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:08:33.781951Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:08:33.782155Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:33.784639Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:08:33.784788Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:33.786352Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:08:33.786520Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:33.788462Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:08:33.788630Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:33.790540Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:08:33.790708Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:33.792516Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:08:33.792681Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:33.794756Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:08:33.794915Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:33.796829Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:08:33.801890Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:33.804483Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:34.030346Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:08:34.030569Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:08:34.030672Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:34.032153Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:08:34.032286Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:34.034231Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:08:34.034378Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:34.035820Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:08:34.035945Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:34.037123Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:08:34.037245Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:34.038400Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:08:34.038522Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:34.039800Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:08:34.039921Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:34.041203Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:08:34.045172Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:34.047796Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:34.182154Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:08:34.182375Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:08:34.182475Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:34.184579Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:08:34.184717Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:34.186056Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:08:34.186187Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:34.187417Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:08:34.187542Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:34.188690Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:08:34.188809Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:34.189953Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:08:34.190078Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:34.191391Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:08:34.191512Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:34.192770Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:08:34.196676Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:34.199249Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:36.084634Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T17:08:36.084950Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.085986Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T17:08:36.086133Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.086688Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T17:08:36.086821Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.087602Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:08:36.087898Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:08:36.088106Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.093157Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:08:36.093304Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.094760Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:08:36.094894Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.096159Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:08:36.096291Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.097752Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:08:36.097887Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.099194Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:08:36.099326Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.101528Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:08:36.101669Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.103152Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:08:36.115023Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:36.351203Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:08:36.351546Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:08:36.351667Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.353037Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:08:36.353162Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.354524Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:08:36.354648Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.355866Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:08:36.355987Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.357136Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:08:36.357256Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.358445Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:08:36.358568Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.359872Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:08:36.359994Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.361270Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:08:36.365506Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:08:36.493197Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:08:36.493426Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:08:36.493528Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.494954Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:08:36.495081Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.496294Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:08:36.496472Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.497744Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:08:36.497868Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.499045Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:08:36.499164Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.501345Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:08:36.501496Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.502924Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:08:36.503045Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.504320Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:08:36.508100Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/v1/activity/user \"HTTP/1.1 401 Unauthorized\""}
{"timestamp": "2025-08-10T17:08:36.641003Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:08:36.641241Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:08:36.641344Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.642752Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:08:36.642881Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.643994Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:08:36.644109Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.645193Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:08:36.645307Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.646330Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:08:36.646444Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.647428Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:08:36.647540Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.648641Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:08:36.648755Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:08:36.650544Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:08:36.655305Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:45.736565Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T17:09:45.736875Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:45.737904Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T17:09:45.738053Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:45.738620Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T17:09:45.738759Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:45.739568Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:09:45.741913Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:09:45.742183Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00047s] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:09:45.748040Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:09:45.748257Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00037s] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:09:45.749515Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:09:45.750088Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:09:45.752280Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:09:45.987628Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/post/ \"HTTP/1.1 404 Not Found\""}
{"timestamp": "2025-08-10T17:09:46.115156Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:09:46.115870Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:09:46.116121Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.3744s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:09:46.117599Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:09:46.117913Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.37s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:09:46.118738Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:09:46.119179Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:09:46.121167Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:09:46.243731Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:09:46.244096Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:09:46.244230Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.5025s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:09:46.245860Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:09:46.246139Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.4982s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:09:46.247260Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:09:46.247780Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:09:46.250017Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:09:46.379955Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:09:46.380306Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:09:46.380435Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.6388s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:09:46.381670Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:09:46.381798Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.6339s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:09:46.383041Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:09:46.383705Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:09:46.385743Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:09:46.511625Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:09:46.512044Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:09:46.512183Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.7705s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:09:46.513337Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:09:46.513473Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.7656s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:09:46.514187Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:09:46.514527Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:09:46.516244Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:09:46.633858Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:09:46.761736Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:09:46.886010Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:09:48.386537Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T17:09:48.386852Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.387639Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T17:09:48.387775Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.388220Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T17:09:48.388348Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.388990Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:09:48.389271Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:09:48.389475Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.392783Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:09:48.392912Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.394089Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:09:48.394214Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.395371Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:09:48.395492Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.396535Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:09:48.396654Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.397737Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:09:48.397877Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.399352Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:09:48.399633Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.401553Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:09:48.412548Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:48.415770Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:48.654621Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:09:48.654840Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:09:48.654942Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.656398Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:09:48.656530Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.657737Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:09:48.657860Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.659110Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:09:48.659230Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.660398Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:09:48.660517Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.661673Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:09:48.661794Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.663062Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:09:48.663188Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.664447Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:09:48.668834Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:48.671396Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:48.824735Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:09:48.824972Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:09:48.825076Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.826575Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:09:48.826707Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.827919Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:09:48.828044Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.829477Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:09:48.829611Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.830831Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:09:48.830957Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.832143Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:09:48.832272Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.833663Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:09:48.833855Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.835196Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:09:48.839165Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:48.841772Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:48.989034Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:09:48.989261Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:09:48.989364Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.990803Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:09:48.990931Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.992151Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:09:48.992282Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.993539Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:09:48.993663Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.994852Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:09:48.994975Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.996196Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:09:48.996319Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.997623Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:09:48.997743Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:48.999655Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:09:49.004118Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:49.006638Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:49.133443Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:09:49.133656Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:09:49.133755Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.135070Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:09:49.135191Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.136259Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:09:49.136378Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.137471Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:09:49.137591Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.138823Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:09:49.138951Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.140035Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:09:49.140154Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.141280Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:09:49.141394Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.142465Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:09:49.146053Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:49.148461Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:49.263800Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:09:49.264032Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:09:49.264139Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.265540Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:09:49.265674Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.266934Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:09:49.267063Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.268245Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:09:49.268364Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.269411Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:09:49.269527Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.270545Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:09:49.270662Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.271766Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:09:49.271880Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.272938Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:09:49.276484Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:49.279536Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:49.412120Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:09:49.412352Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:09:49.412460Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.414213Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:09:49.414345Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.415896Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:09:49.416095Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.417673Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:09:49.417803Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.419196Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:09:49.419325Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.420804Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:09:49.421017Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.422577Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:09:49.422704Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:49.424180Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:09:49.428021Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:49.430322Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:51.051056Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T17:09:51.051548Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.052579Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T17:09:51.052719Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.053162Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T17:09:51.053292Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.054124Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:09:51.054623Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:09:51.054844Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.060358Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:09:51.060556Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.061968Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:09:51.062096Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.063365Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:09:51.063496Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.064697Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:09:51.064852Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.066374Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:09:51.066517Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.068453Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:09:51.068630Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.070828Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:09:51.083318Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:51.465262Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:09:51.465574Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:09:51.465692Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.466953Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:09:51.467067Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.468029Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:09:51.468133Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.469081Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:09:51.469179Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.470038Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:09:51.470130Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.470967Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:09:51.471060Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.472007Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:09:51.472097Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.473019Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:09:51.476331Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:09:51.600292Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:09:51.600635Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:09:51.600807Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.602328Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:09:51.602521Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.603684Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:09:51.603853Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.604961Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:09:51.605120Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.606160Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:09:51.606332Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.607359Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:09:51.607525Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.608739Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:09:51.608917Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.610135Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:09:51.613779Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/v1/activity/user \"HTTP/1.1 401 Unauthorized\""}
{"timestamp": "2025-08-10T17:09:51.723949Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:09:51.724187Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:09:51.724295Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.725600Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:09:51.725711Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.726701Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:09:51.726798Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.727772Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:09:51.727868Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.728723Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:09:51.728823Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.730280Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:09:51.730532Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.732055Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:09:51.732364Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:09:51.733747Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:09:51.737496Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 422 Unprocessable Entity\""}
{"timestamp": "2025-08-10T17:10:51.820123Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T17:10:51.820661Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:51.821784Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T17:10:51.821925Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:51.822398Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T17:10:51.822528Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:51.823159Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:51.825519Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:51.825767Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00045s] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:51.841421Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:51.841593Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00028s] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:51.842594Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:10:51.843084Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:10:51.845745Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:10:51.957677Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/post/ \"HTTP/1.1 404 Not Found\""}
{"timestamp": "2025-08-10T17:10:51.966976Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:51.967325Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:51.967446Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1422s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:51.968659Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:51.968803Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1275s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:51.969617Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:10:51.970031Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:10:51.972149Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:10:51.982007Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:51.982408Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:51.982538Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1572s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:51.983794Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:51.983943Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1426s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:51.984752Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:10:51.985135Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:10:51.987085Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:10:52.000290Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:52.000627Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:52.000778Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1755s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:52.002075Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:52.002222Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1609s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:52.003100Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:10:52.003502Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:10:52.005570Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:10:52.015319Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:52.015650Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:52.015772Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1905s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:52.017065Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:52.017214Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1759s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:52.018063Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:10:52.018485Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:10:52.020619Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:10:52.030768Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:10:52.040955Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:10:52.117447Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:10:53.564360Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T17:10:53.564809Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.566002Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T17:10:53.566159Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.566708Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T17:10:53.566844Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.567580Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:53.568258Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:10:53.568486Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.574096Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:10:53.574234Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.575512Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:10:53.575639Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.576888Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:10:53.577097Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.578431Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:10:53.578586Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.579815Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:10:53.579946Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.581295Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:10:53.581510Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.583217Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:10:53.601794Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:53.603858Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:53.604022Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00026s] {'username_1': 'user1', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:53.606634Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:53.606792Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00027s] {'email_1': 'user1@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:53.607792Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:user1, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:10:53.608257Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:10:53.609784Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:10:53.611989Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:53.612259Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:53.612445Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.008694s ago] {'username_1': 'user2', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:53.613798Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:53.613948Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.007417s ago] {'email_1': 'user2@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:53.614928Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:user2, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:10:53.615336Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:10:53.616669Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:10:53.723637Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:53.723862Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:10:53.723966Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.725327Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:10:53.725457Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.726657Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:10:53.726780Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.728020Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:10:53.728147Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.729327Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:10:53.729455Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.730622Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:10:53.730746Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.732888Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:10:53.733031Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.734383Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:10:53.737757Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:53.738045Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:53.738163Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1344s ago] {'username_1': 'user1', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:53.739412Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:53.739555Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.133s ago] {'email_1': 'user1@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:53.740408Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:user1, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:10:53.740825Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:10:53.742055Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:10:53.744077Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:53.744323Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:53.744438Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1407s ago] {'username_1': 'user2', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:53.745647Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:53.745789Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1393s ago] {'email_1': 'user2@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:53.746599Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:user2, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:10:53.747006Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:10:53.748237Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:10:53.757598Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:53.757824Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:10:53.757930Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.759346Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:10:53.759477Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.760705Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:10:53.760828Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.762200Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:10:53.762328Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.763594Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:10:53.763718Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.765119Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:10:53.765356Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.766800Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:10:53.766930Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.768243Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:10:53.771588Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:53.771870Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:53.771988Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1682s ago] {'username_1': 'user1', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:53.773235Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:53.773372Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1669s ago] {'email_1': 'user1@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:53.774208Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:user1, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:10:53.774616Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:10:53.775834Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:10:53.777903Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:10:53.787522Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:53.787745Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:10:53.787847Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.789286Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:10:53.789423Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.790619Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:10:53.790744Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.791986Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:10:53.792110Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.793280Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:10:53.793403Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.794567Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:10:53.794687Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.795983Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:10:53.796108Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.797369Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:10:53.801029Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:10:53.803071Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:10:53.813600Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:53.813820Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:10:53.813925Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.815612Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:10:53.815753Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.817151Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:10:53.817283Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.818525Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:10:53.818648Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.819802Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:10:53.819924Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.821074Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:10:53.821195Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.822491Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:10:53.822677Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.823970Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:10:53.827482Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:10:53.829491Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:10:53.838459Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:53.838689Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:10:53.838791Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.840630Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:10:53.840771Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.842379Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:10:53.842518Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.843817Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:10:53.843944Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.845141Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:10:53.845266Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.846446Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:10:53.846568Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.847923Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:10:53.848271Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.849785Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:10:53.853109Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:10:53.855080Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:10:53.863838Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:53.864055Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:10:53.864162Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.865934Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:10:53.866090Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.867310Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:10:53.867434Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.868725Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:10:53.868852Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.870012Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:10:53.870132Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.871291Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:10:53.871415Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.872711Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:10:53.872833Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:53.874108Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:10:53.877594Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:10:53.879604Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 429 Too Many Requests\""}
{"timestamp": "2025-08-10T17:10:55.384380Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT DATABASE()"}
{"timestamp": "2025-08-10T17:10:55.384743Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.385549Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@sql_mode"}
{"timestamp": "2025-08-10T17:10:55.385710Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.386158Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT @@lower_case_table_names"}
{"timestamp": "2025-08-10T17:10:55.386289Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.386902Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:55.387190Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:10:55.387392Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.390720Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:10:55.390840Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.392053Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:10:55.392157Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.393420Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:10:55.393522Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.394616Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:10:55.394710Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.395735Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:10:55.395906Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.397301Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:10:55.397429Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.399538Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:10:55.418615Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:55.420733Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:55.420893Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00025s] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:55.423537Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:55.423677Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00023s] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:55.424618Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:10:55.425248Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:10:55.426453Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:10:55.537960Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:55.538186Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:10:55.538289Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.539853Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:10:55.539985Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.541221Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:10:55.541344Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.542582Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:10:55.542709Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.543886Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:10:55.544070Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.545257Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:10:55.545379Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.546660Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:10:55.546783Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.548236Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:10:55.551754Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:55.552043Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:55.552165Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1315s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:55.553409Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:55.553544Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1301s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:55.554387Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:10:55.554877Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:10:55.556146Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:10:55.564860Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:55.565299Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:10:55.565438Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.566773Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:10:55.566906Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.568137Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:10:55.568272Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.569502Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:10:55.569646Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.570910Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:10:55.571084Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.572378Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:10:55.572514Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.573889Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:10:55.574026Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.575375Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:10:55.579343Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/v1/activity/user \"HTTP/1.1 401 Unauthorized\""}
{"timestamp": "2025-08-10T17:10:55.585296Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:55.585523Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_hashtags`"}
{"timestamp": "2025-08-10T17:10:55.585627Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.586912Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`post_likes`"}
{"timestamp": "2025-08-10T17:10:55.587049Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.588182Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`posts`"}
{"timestamp": "2025-08-10T17:10:55.588315Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.589533Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`hashtags`"}
{"timestamp": "2025-08-10T17:10:55.589662Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.590906Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`follow`"}
{"timestamp": "2025-08-10T17:10:55.591049Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.592290Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`user`"}
{"timestamp": "2025-08-10T17:10:55.592433Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.594140Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "DESCRIBE `social_media`.`activity`"}
{"timestamp": "2025-08-10T17:10:55.594306Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[raw sql] {}"}
{"timestamp": "2025-08-10T17:10:55.595679Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "COMMIT"}
{"timestamp": "2025-08-10T17:10:55.599231Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:10:55.599551Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = %(username_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:55.599683Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.1791s ago] {'username_1': 'testuser', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:55.601270Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.email = %(email_1)s \n LIMIT %(param_1)s"}
{"timestamp": "2025-08-10T17:10:55.601427Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[cached since 0.178s ago] {'email_1': 'test@example.com', 'param_1': 1}"}
{"timestamp": "2025-08-10T17:10:55.602324Z", "level": "INFO", "logger": "SECURITY", "message": "AUTH FAILED - User:testuser, IP:testclient, Reason:user already exists", "event_type": "auth_failed", "user_agent": "testclient"}
{"timestamp": "2025-08-10T17:10:55.602650Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:10:55.603672Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/auth/register \"HTTP/1.1 409 Conflict\""}
{"timestamp": "2025-08-10T17:14:57.042274Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/docs \"HTTP/1.1 200 OK\""}
{"timestamp": "2025-08-10T17:14:57.066446Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "BEGIN (implicit)"}
{"timestamp": "2025-08-10T17:14:57.069062Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "SELECT user.id AS user_id, user.email AS user_email, user.username AS user_username, user.name AS user_name, user.hashed_password AS user_hashed_password, user.created_at AS user_created_at, user.dob AS user_dob, user.gender AS user_gender, user.profile_pic AS user_profile_pic, user.bio AS user_bio, user.location AS user_location, user.followers_count AS user_followers_count, user.following_count AS user_following_count \nFROM user \nWHERE user.username = ?\n LIMIT ? OFFSET ?"}
{"timestamp": "2025-08-10T17:14:57.069370Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "[generated in 0.00066s] ('testuser', 1, 0)"}
{"timestamp": "2025-08-10T17:14:57.075000Z", "level": "INFO", "logger": "sqlalchemy.engine.Engine", "message": "ROLLBACK"}
{"timestamp": "2025-08-10T17:14:57.076731Z", "level": "INFO", "logger": "httpx", "message": "HTTP Request: POST http://testserver/v1/test/register \"HTTP/1.1 500 Internal Server Error\""}
